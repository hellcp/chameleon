{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/sticky-scroller/dist/sticky-scroller.umd.js","src/js/components/toc.js"],"names":[],"mappings":"AAAA;ACAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"toc.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.StickyScroller=t():e.StickyScroller=t()}(window,function(){return function(e){var t={};function o(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}return o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},o.r=function(e){Object.defineProperty(e,\"__esModule\",{value:!0})},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,\"a\",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p=\"\",o(o.s=0)}([function(e,t){e.exports=class{constructor(e,t){if(this.newScrollPosition=0,this.oldScrollPositon=0,this.ticking=!1,\"string\"==typeof e)this.element=document.querySelector(e);else{if(!(e instanceof HTMLElement))return void console.error(\"StickyScroller: element is required.\");this.element=e}this.element.style.overflowY=\"hidden\",window.addEventListener(\"scroll\",this.onWindowScroll.bind(this))}onWindowScroll(){this.newScrollPosition=window.scrollY,this.ticking||(window.requestAnimationFrame(()=>{this.translate(),this.ticking=!1,this.oldScrollPositon=this.newScrollPosition}),this.ticking=!0)}translate(){const e=this.element.parentElement.getBoundingClientRect(),t=this.newScrollPosition-this.oldScrollPositon;e.top>0&&t>0||e.bottom<window.innerHeight&&t<0||(this.element.scrollTop=this.element.scrollTop+t)}}}])});","const StickyScroller = require(\"sticky-scroller\");\n\nconst toc = document.querySelector(\".toc\");\n\nconst lastIds = [\"\", \"\", \"\", \"\", \"\"];\nconst regNonWord = /[\\ \\-\\#\\/\\\\\\.\\,\\\"\\'\\:\\;\\[\\]\\{\\}\\&\\%\\$\\@\\!\\~\\+\\=\\<\\>]+/g;\nconst regNumber = /^\\d+/;\nlet showNumber = true;\n\nif (toc) {\n  new StickyScroller(toc); // scroll with the page magically\n\n  const scope = document.querySelector(\".toc-scope\");\n\n  if (scope) {\n    const headings = scope.querySelectorAll(\n      \"h2:not(.no-toc), h3:not(.no-toc), h4:not(.no-toc), h5:not(.no-toc), h6:not(.no-toc)\"\n    );\n\n    const list = [];\n    let numberCounter = 0;\n\n    headings.forEach(function(h) {\n      const level = parseInt(h.tagName.substr(1)) - 2;\n      linkHead(h, level);\n      const item = {};\n      item.link = \"#\" + h.id;\n      item.text = h.textContent.trim();\n      if (regNumber.test(item.text)) {\n        numberCounter++;\n      }\n      pushItem(list, item, level);\n    });\n\n    // In changelog, there are already heading numbers. So we don't need to show\n    // additional numbers anymore.\n    showNumber = numberCounter < 5;\n    const listEl = document.createElement(\"ul\");\n    toc.append(listEl);\n    renderList(listEl, list);\n  }\n}\n\nfunction linkHead(h, level) {\n  if (!h.id) {\n    let id = \"\";\n    if (level > 0) {\n      id += lastIds[level - 1] + \"-\";\n    }\n    id += h.textContent\n      .trim()\n      .toLowerCase()\n      .replace(regNonWord, \"-\");\n\n    h.id = id;\n  }\n\n  lastIds[level] = h.id;\n}\n\nfunction pushItem(list, item, level) {\n  if (level === 0) {\n    list.push(item);\n  } else {\n    if (!list.length) {\n      list.push({ link: \"#\", text: \"???\" });\n    }\n    const parent = list[list.length - 1];\n    if (!parent.children) {\n      parent.children = [];\n    }\n    pushItem(parent.children, item, level - 1);\n  }\n}\n\nfunction renderList(listEl, list, prefix = \"\") {\n  list.forEach(function(item, i) {\n    const itemEl = document.createElement(\"li\");\n    const linkEl = document.createElement(\"a\");\n    listEl.append(itemEl);\n    itemEl.append(linkEl);\n    linkEl.href = item.link;\n    if (showNumber) {\n      linkEl.textContent = prefix + (i + 1) + \". \" + item.text;\n    } else {\n      linkEl.textContent = item.text;\n    }\n\n    if (item.children) {\n      const childrenEl = document.createElement(\"ul\");\n      itemEl.append(childrenEl);\n      renderList(childrenEl, item.children, prefix + (i + 1) + \".\");\n    }\n  });\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvc3RpY2t5LXNjcm9sbGVyL2Rpc3Qvc3RpY2t5LXNjcm9sbGVyLnVtZC5qcyIsInNyYy9qcy9jb21wb25lbnRzL3RvYy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBOztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsIiFmdW5jdGlvbihlLHQpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPXQoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLHQpOlwib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzP2V4cG9ydHMuU3RpY2t5U2Nyb2xsZXI9dCgpOmUuU3RpY2t5U2Nyb2xsZXI9dCgpfSh3aW5kb3csZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9e307ZnVuY3Rpb24gbyhuKXtpZih0W25dKXJldHVybiB0W25dLmV4cG9ydHM7dmFyIGk9dFtuXT17aTpuLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIGVbbl0uY2FsbChpLmV4cG9ydHMsaSxpLmV4cG9ydHMsbyksaS5sPSEwLGkuZXhwb3J0c31yZXR1cm4gby5tPWUsby5jPXQsby5kPWZ1bmN0aW9uKGUsdCxuKXtvLm8oZSx0KXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7Y29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITAsZ2V0Om59KX0sby5yPWZ1bmN0aW9uKGUpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfSxvLm49ZnVuY3Rpb24oZSl7dmFyIHQ9ZSYmZS5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIGUuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gZX07cmV0dXJuIG8uZCh0LFwiYVwiLHQpLHR9LG8ubz1mdW5jdGlvbihlLHQpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KX0sby5wPVwiXCIsbyhvLnM9MCl9KFtmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1jbGFzc3tjb25zdHJ1Y3RvcihlLHQpe2lmKHRoaXMubmV3U2Nyb2xsUG9zaXRpb249MCx0aGlzLm9sZFNjcm9sbFBvc2l0b249MCx0aGlzLnRpY2tpbmc9ITEsXCJzdHJpbmdcIj09dHlwZW9mIGUpdGhpcy5lbGVtZW50PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSk7ZWxzZXtpZighKGUgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkpcmV0dXJuIHZvaWQgY29uc29sZS5lcnJvcihcIlN0aWNreVNjcm9sbGVyOiBlbGVtZW50IGlzIHJlcXVpcmVkLlwiKTt0aGlzLmVsZW1lbnQ9ZX10aGlzLmVsZW1lbnQuc3R5bGUub3ZlcmZsb3dZPVwiaGlkZGVuXCIsd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIix0aGlzLm9uV2luZG93U2Nyb2xsLmJpbmQodGhpcykpfW9uV2luZG93U2Nyb2xsKCl7dGhpcy5uZXdTY3JvbGxQb3NpdGlvbj13aW5kb3cuc2Nyb2xsWSx0aGlzLnRpY2tpbmd8fCh3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpPT57dGhpcy50cmFuc2xhdGUoKSx0aGlzLnRpY2tpbmc9ITEsdGhpcy5vbGRTY3JvbGxQb3NpdG9uPXRoaXMubmV3U2Nyb2xsUG9zaXRpb259KSx0aGlzLnRpY2tpbmc9ITApfXRyYW5zbGF0ZSgpe2NvbnN0IGU9dGhpcy5lbGVtZW50LnBhcmVudEVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksdD10aGlzLm5ld1Njcm9sbFBvc2l0aW9uLXRoaXMub2xkU2Nyb2xsUG9zaXRvbjtlLnRvcD4wJiZ0PjB8fGUuYm90dG9tPHdpbmRvdy5pbm5lckhlaWdodCYmdDwwfHwodGhpcy5lbGVtZW50LnNjcm9sbFRvcD10aGlzLmVsZW1lbnQuc2Nyb2xsVG9wK3QpfX19XSl9KTsiLCJjb25zdCBTdGlja3lTY3JvbGxlciA9IHJlcXVpcmUoXCJzdGlja3ktc2Nyb2xsZXJcIik7XG5cbmNvbnN0IHRvYyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudG9jXCIpO1xuXG5jb25zdCBsYXN0SWRzID0gW1wiXCIsIFwiXCIsIFwiXCIsIFwiXCIsIFwiXCJdO1xuY29uc3QgcmVnTm9uV29yZCA9IC9bXFwgXFwtXFwjXFwvXFxcXFxcLlxcLFxcXCJcXCdcXDpcXDtcXFtcXF1cXHtcXH1cXCZcXCVcXCRcXEBcXCFcXH5cXCtcXD1cXDxcXD5dKy9nO1xuY29uc3QgcmVnTnVtYmVyID0gL15cXGQrLztcbmxldCBzaG93TnVtYmVyID0gdHJ1ZTtcblxuaWYgKHRvYykge1xuICBuZXcgU3RpY2t5U2Nyb2xsZXIodG9jKTsgLy8gc2Nyb2xsIHdpdGggdGhlIHBhZ2UgbWFnaWNhbGx5XG5cbiAgY29uc3Qgc2NvcGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRvYy1zY29wZVwiKTtcblxuICBpZiAoc2NvcGUpIHtcbiAgICBjb25zdCBoZWFkaW5ncyA9IHNjb3BlLnF1ZXJ5U2VsZWN0b3JBbGwoXG4gICAgICBcImgyOm5vdCgubm8tdG9jKSwgaDM6bm90KC5uby10b2MpLCBoNDpub3QoLm5vLXRvYyksIGg1Om5vdCgubm8tdG9jKSwgaDY6bm90KC5uby10b2MpXCJcbiAgICApO1xuXG4gICAgY29uc3QgbGlzdCA9IFtdO1xuICAgIGxldCBudW1iZXJDb3VudGVyID0gMDtcblxuICAgIGhlYWRpbmdzLmZvckVhY2goZnVuY3Rpb24oaCkge1xuICAgICAgY29uc3QgbGV2ZWwgPSBwYXJzZUludChoLnRhZ05hbWUuc3Vic3RyKDEpKSAtIDI7XG4gICAgICBsaW5rSGVhZChoLCBsZXZlbCk7XG4gICAgICBjb25zdCBpdGVtID0ge307XG4gICAgICBpdGVtLmxpbmsgPSBcIiNcIiArIGguaWQ7XG4gICAgICBpdGVtLnRleHQgPSBoLnRleHRDb250ZW50LnRyaW0oKTtcbiAgICAgIGlmIChyZWdOdW1iZXIudGVzdChpdGVtLnRleHQpKSB7XG4gICAgICAgIG51bWJlckNvdW50ZXIrKztcbiAgICAgIH1cbiAgICAgIHB1c2hJdGVtKGxpc3QsIGl0ZW0sIGxldmVsKTtcbiAgICB9KTtcblxuICAgIC8vIEluIGNoYW5nZWxvZywgdGhlcmUgYXJlIGFscmVhZHkgaGVhZGluZyBudW1iZXJzLiBTbyB3ZSBkb24ndCBuZWVkIHRvIHNob3dcbiAgICAvLyBhZGRpdGlvbmFsIG51bWJlcnMgYW55bW9yZS5cbiAgICBzaG93TnVtYmVyID0gbnVtYmVyQ291bnRlciA8IDU7XG4gICAgY29uc3QgbGlzdEVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInVsXCIpO1xuICAgIHRvYy5hcHBlbmQobGlzdEVsKTtcbiAgICByZW5kZXJMaXN0KGxpc3RFbCwgbGlzdCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbGlua0hlYWQoaCwgbGV2ZWwpIHtcbiAgaWYgKCFoLmlkKSB7XG4gICAgbGV0IGlkID0gXCJcIjtcbiAgICBpZiAobGV2ZWwgPiAwKSB7XG4gICAgICBpZCArPSBsYXN0SWRzW2xldmVsIC0gMV0gKyBcIi1cIjtcbiAgICB9XG4gICAgaWQgKz0gaC50ZXh0Q29udGVudFxuICAgICAgLnRyaW0oKVxuICAgICAgLnRvTG93ZXJDYXNlKClcbiAgICAgIC5yZXBsYWNlKHJlZ05vbldvcmQsIFwiLVwiKTtcblxuICAgIGguaWQgPSBpZDtcbiAgfVxuXG4gIGxhc3RJZHNbbGV2ZWxdID0gaC5pZDtcbn1cblxuZnVuY3Rpb24gcHVzaEl0ZW0obGlzdCwgaXRlbSwgbGV2ZWwpIHtcbiAgaWYgKGxldmVsID09PSAwKSB7XG4gICAgbGlzdC5wdXNoKGl0ZW0pO1xuICB9IGVsc2Uge1xuICAgIGlmICghbGlzdC5sZW5ndGgpIHtcbiAgICAgIGxpc3QucHVzaCh7IGxpbms6IFwiI1wiLCB0ZXh0OiBcIj8/P1wiIH0pO1xuICAgIH1cbiAgICBjb25zdCBwYXJlbnQgPSBsaXN0W2xpc3QubGVuZ3RoIC0gMV07XG4gICAgaWYgKCFwYXJlbnQuY2hpbGRyZW4pIHtcbiAgICAgIHBhcmVudC5jaGlsZHJlbiA9IFtdO1xuICAgIH1cbiAgICBwdXNoSXRlbShwYXJlbnQuY2hpbGRyZW4sIGl0ZW0sIGxldmVsIC0gMSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVuZGVyTGlzdChsaXN0RWwsIGxpc3QsIHByZWZpeCA9IFwiXCIpIHtcbiAgbGlzdC5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0sIGkpIHtcbiAgICBjb25zdCBpdGVtRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gICAgY29uc3QgbGlua0VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7XG4gICAgbGlzdEVsLmFwcGVuZChpdGVtRWwpO1xuICAgIGl0ZW1FbC5hcHBlbmQobGlua0VsKTtcbiAgICBsaW5rRWwuaHJlZiA9IGl0ZW0ubGluaztcbiAgICBpZiAoc2hvd051bWJlcikge1xuICAgICAgbGlua0VsLnRleHRDb250ZW50ID0gcHJlZml4ICsgKGkgKyAxKSArIFwiLiBcIiArIGl0ZW0udGV4dDtcbiAgICB9IGVsc2Uge1xuICAgICAgbGlua0VsLnRleHRDb250ZW50ID0gaXRlbS50ZXh0O1xuICAgIH1cblxuICAgIGlmIChpdGVtLmNoaWxkcmVuKSB7XG4gICAgICBjb25zdCBjaGlsZHJlbkVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInVsXCIpO1xuICAgICAgaXRlbUVsLmFwcGVuZChjaGlsZHJlbkVsKTtcbiAgICAgIHJlbmRlckxpc3QoY2hpbGRyZW5FbCwgaXRlbS5jaGlsZHJlbiwgcHJlZml4ICsgKGkgKyAxKSArIFwiLlwiKTtcbiAgICB9XG4gIH0pO1xufVxuIl19"}